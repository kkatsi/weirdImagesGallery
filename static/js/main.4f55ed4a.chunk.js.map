{"version":3,"sources":["ImgCard.js","ImgModal.js","App.js","useImageSearch.js","serviceWorker.js","index.js"],"names":["ImgCard","props","Card","className","onClick","id","index","Img","src","thumbSrc","alt","ImgOverlay","indexID","Text","href","insta","target","name","download","icon","faArrowDown","ImgModal","Modal","show","onHide","handleClose","size","aria-labelledby","centered","Container","fluid","Row","Col","onLeftClick","faChevronLeft","xs","Header","closeButton","Title","Body","document","getElementsByClassName","getElementsByTagName","classList","toggle","onSwipedLeft","onRightClick","onSwipedRight","modalSrc","Button","variant","Footer","description","faChevronRight","App","useState","pageNumber","setPageNumber","currentIndexID","setCurrentIndexID","setName","setInsta","setDescription","setDownload","setModalSrc","currentIndex","setCurrentIndex","error","setError","data","setData","hasMore","setHasMore","useEffect","axios","method","url","params","client_id","process","page","query","per_page","then","res","prevData","Set","results","length","catch","e","useImageSearch","loadmore","addEventListener","replace","setShow","handleClick","console","log","currentTarget","currentData","find","d","urls","regular","user","instagram_username","links","nextIndex","Number","prevIndex","Jumbotron","dataLength","next","breakpointCols","default","1200","767","columnClassName","map","i","key","small","alt_description","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4f55ed4a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nfunction ImgCard(props) {\r\n  return (\r\n    <>\r\n      <Card\r\n        className=\"bg-dark text-white border-0 pointer\"\r\n        onClick={props.onClick}\r\n        id={props.index}\r\n      >\r\n        <Card.Img\r\n          src={props.thumbSrc}\r\n          alt={props.alt}\r\n          className=\"width-100 img-fluid\"\r\n        />\r\n        <Card.ImgOverlay\r\n          className=\"d-hidden align-items-end overlay\"\r\n          id={props.indexID}\r\n        >\r\n          <Card.Text\r\n            className=\"d-flex justify-content-between width-100 pb-0\"\r\n            id={props.indexID}\r\n          >\r\n            <a\r\n              href={\"https://www.instagram.com/\" + props.insta}\r\n              className=\"text-light nameLink align-self-end\"\r\n              target=\"_blank\"\r\n            >\r\n              {props.name}\r\n            </a>\r\n            <a href={props.download} className=\"btn btn-outline-light\">\r\n              <FontAwesomeIcon icon={faArrowDown} />\r\n            </a>\r\n          </Card.Text>\r\n        </Card.ImgOverlay>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImgCard;\r\n","import React from \"react\";\r\nimport { Modal, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport {\r\n  faShare,\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faArrowDown\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Swipeable } from \"react-swipeable\";\r\n\r\nfunction ImgModal(props) {\r\n  function handleClick() {\r\n    document\r\n      .getElementsByClassName(\"modal-body\")[0]\r\n      .getElementsByTagName(\"img\")[0]\r\n      .classList.toggle(\"fullsize\");\r\n    document\r\n      .getElementsByClassName(\"modal-body\")[0]\r\n      .getElementsByTagName(\"img\")[0]\r\n      .classList.toggle(\"size\");\r\n    document\r\n      .getElementsByClassName(\"modal-body\")[0]\r\n      .getElementsByTagName(\"img\")[0]\r\n      .classList.toggle(\"zoom-in\");\r\n    document\r\n      .getElementsByClassName(\"modal-body\")[0]\r\n      .getElementsByTagName(\"img\")[0]\r\n      .classList.toggle(\"zoom-out\");\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.handleClose}\r\n      size=\"xl\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      id=\"mainModal\"\r\n    >\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"modal-arrow-left\" onClick={props.onLeftClick}>\r\n              <a href=\"#\" className=\"btn btn-outline-light border-0\">\r\n                <FontAwesomeIcon icon={faChevronLeft} size=\"3x\" />\r\n              </a>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"12\" className=\"p-0\">\r\n            <Modal.Header closeButton className=\"border-bottom-0 px-4 pb-3\">\r\n              <Modal.Title className=\"artistInfo\">\r\n                <p className=\"lead pb-0 mb-0\">{props.name}</p>\r\n                <a\r\n                  href={\"https://www.instagram.com/\" + props.insta}\r\n                  className=\"text-dark nameLink\"\r\n                  target=\"_blank\"\r\n                >\r\n                  {props.insta ? \"@\" + props.insta : \"\"}\r\n                </a>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              className=\"modal-body text-center p-0\"\r\n              id=\"modalBody\"\r\n              onClick={handleClick}\r\n            >\r\n              <Swipeable\r\n                onSwipedLeft={props.onRightClick}\r\n                onSwipedRight={props.onLeftClick}\r\n              >\r\n                <img\r\n                  src={props.modalSrc}\r\n                  alt=\"\"\r\n                  className=\"img-fluid size zoom-in\"\r\n                />\r\n                <div className=\" align-items-end overlay\">\r\n                  <p className=\"d-flex justify-content-between width-100 pb-0\">\r\n                    <Button\r\n                      href={props.download}\r\n                      variant=\"secondary\"\r\n                      className=\"btn-md-sm\"\r\n                    >\r\n                      Download\r\n                    </Button>\r\n                  </p>\r\n                </div>\r\n              </Swipeable>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"border-top-0 px-4\">\r\n              <Container fluid className=\"pl-0\">\r\n                <Row>\r\n                  <Col className=\"align-self-center width-md-100\" xs=\"9\">\r\n                    <p className=\" mb-0\">{props.description}</p>\r\n                  </Col>\r\n                  <Col className=\"text-right align-self-center p-0\">\r\n                    <Button\r\n                      href={props.download}\r\n                      variant=\"outline-secondary\"\r\n                      className=\"btn-md-sm hide-md\"\r\n                    >\r\n                      Download\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Modal.Footer>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"modal-arrow-right\" onClick={props.onRightClick}>\r\n              <a href=\"#\" className=\"btn btn-outline-light border-0\">\r\n                <FontAwesomeIcon icon={faChevronRight} size=\"3x\" />\r\n              </a>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ImgModal;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./css/masonry.css\";\nimport Masonry from \"react-masonry-css\";\n// import \"./css/scrollbar.css\";\nimport \"./css/scroll-arrow.css\";\nimport ImgCard from \"./ImgCard.js\";\nimport useImageSearch from \"./useImageSearch.js\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Jumbotron, Container } from \"react-bootstrap\";\nimport ImgModal from \"./ImgModal.js\";\n\nfunction App(props) {\n  const [pageNumber, setPageNumber] = useState(1);\n  const [currentIndexID, setCurrentIndexID] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [insta, setInsta] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [download, setDownload] = useState(\"\");\n  const [modalSrc, setModalSrc] = useState(0);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  let i = 0;\n\n  const { error, hasMore, data } = useImageSearch(pageNumber);\n\n  const loadmore = pageNumber => {\n    if (hasMore) setPageNumber(pageNumber => pageNumber + 1);\n  };\n\n  //set Card ID right before user clicks the card\n  document.addEventListener(\n    \"click\",\n    function(e) {\n      setCurrentIndexID(e.target.id.replace(\"card\", \"\"));\n    },\n    true\n  );\n\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", handleScroll);\n  // });\n\n  //setting some fancy effect for navbar when scrolling\n  // function handleScroll(e) {\n  //   const navbar = document.getElementById(\"navbar\");\n  //   if (window.scrollY > navbar.clientHeight) navbar.classList.add(\"scrolled\");\n  //   else navbar.classList.remove(\"scrolled\");\n  // }\n\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  //Getting the clicked card's props to pass into Modal\n  function handleClick(e) {\n    console.log(e.target);\n    setCurrentIndexID(e.target.id.replace(\"card\", \"\"));\n    setCurrentIndex(e.currentTarget.id);\n    const currentData = data.find(d => d.id === currentIndexID);\n    setModalSrc(currentData.urls.regular);\n    setName(currentData.user.name);\n    setDescription(currentData.description);\n    setInsta(currentData.user.instagram_username);\n    setDownload(currentData.links.download + \"?force=true\");\n    handleShow();\n  }\n\n  //updating Modal's props when user clicks or presses left and right button\n  function onRightClick() {\n    const nextIndex = Number(currentIndex) + 1;\n    if (nextIndex === data.length) loadmore(pageNumber);\n    if (nextIndex < data.length) {\n      setModalSrc(data[nextIndex].urls.regular);\n      setName(data[nextIndex].user.name);\n      setDescription(data[nextIndex].description);\n      setInsta(data[nextIndex].user.instagram_username);\n      setDownload(data[nextIndex].links.download + \"?force=true\");\n      setCurrentIndex(nextIndex);\n    }\n  }\n\n  function onLeftClick() {\n    const prevIndex = Number(currentIndex) - 1;\n    if (prevIndex >= 0) {\n      setModalSrc(data[prevIndex].urls.regular);\n      setName(data[prevIndex].user.name);\n      setDescription(data[prevIndex].description);\n      setInsta(data[prevIndex].user.instagram_username);\n      setDownload(data[prevIndex].links.download + \"?force=true\");\n      setCurrentIndex(prevIndex);\n    }\n  }\n\n  function onKeyDown(e) {\n    if (e.keyCode === 39 && show) {\n      onRightClick();\n    } else if (e.keyCode === 37 && show) onLeftClick();\n  }\n\n  return (\n    <div className=\"App\">\n      <Jumbotron fluid>\n        <Container className=\"text-center\">\n          <h1 className=\"display-1 pt-5 px-5 px-sm-0\">\n            The weird images gallery\n          </h1>\n          <p className=\"lead montserrat\">\n            Here you can find some of the most weird images around the world!\n          </p>\n          <div className=\"wrap pt-2\">\n            <img\n              src=\"http://image.flaticon.com/icons/svg/3/3907.svg\"\n              alt=\"arrow down\"\n              id=\"arrow\"\n              className=\"animated bounce\"\n            />\n          </div>\n        </Container>\n      </Jumbotron>\n\n      <section id=\"mainContent\">\n        <Container>\n          <InfiniteScroll\n            dataLength={data.length}\n            next={() => loadmore(pageNumber)}\n            hasMore={hasMore}\n          >\n            <Masonry\n              breakpointCols={{ default: 3, 1200: 2, 767: 1 }}\n              className=\"masonry-grid\"\n              columnClassName=\"masonry-grid_column\"\n            >\n              {data.map((d, i) => {\n                return (\n                  <ImgCard\n                    key={d.id}\n                    index={i}\n                    thumbSrc={d.urls.small}\n                    name={d.user.name}\n                    download={d.links.download + \"?force=true\"}\n                    insta={d.user.instagram_username}\n                    indexID={\"card\" + d.id}\n                    modalSrc={d.urls.regular}\n                    alt={d.alt_description}\n                    description={d.description}\n                    onClick={handleClick}\n                  />\n                );\n              })}\n            </Masonry>\n          </InfiniteScroll>\n        </Container>\n      </section>\n      <ImgModal\n        show={show}\n        handleClose={handleClose}\n        modalSrc={modalSrc}\n        name={name}\n        description={description}\n        insta={insta}\n        download={download}\n        onLeftClick={onLeftClick}\n        onRightClick={onRightClick}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function useImageSearch(pageNumber) {\r\n  const [error, setError] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"https://api.unsplash.com/search/photos\",\r\n      params: {\r\n        client_id: process.env.REACT_APP_UNSPLASH_ACCESS_KEY,\r\n        page: pageNumber,\r\n        query: \"weird strange\",\r\n        per_page: 20\r\n      }\r\n    })\r\n      .then(res => {\r\n        setData(prevData => {\r\n          return [...new Set([...prevData, ...res.data.results])];\r\n        });\r\n        setHasMore(res.data.results.length > 0);\r\n      })\r\n      .catch(e => {\r\n        setError(true);\r\n      });\r\n  }, [pageNumber]);\r\n\r\n  return { error, data, hasMore };\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}